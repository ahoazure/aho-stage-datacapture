# Generated by Django 3.0.14 on 2022-09-18 11:53

import data_quality.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        # ('home', '0002_filesource_stgcustomnationalobservatory_stgperiodtype_urlsource'),
        ('regions', '0002_auto_20210916_1203'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        # ('indicators', '0004_auto_20220903_1934'),
    ]

    operations = [
        migrations.CreateModel(
            name='Facts_DataFrame',
            fields=[
                ('fact_id', models.AutoField(primary_key=True, serialize=False)),
                ('user', models.PositiveIntegerField(blank=True, verbose_name='UserID')),
                ('afrocode', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Indicator ID')),
                ('indicator_name', models.CharField(blank=True, max_length=1500, null=True, verbose_name='Indicator Name')),
                ('location', models.CharField(max_length=1500, verbose_name='Location Name')),
                ('categoryoption', models.CharField(max_length=1500, verbose_name='Disaggregation Options')),
                ('datasource', models.CharField(max_length=1500, verbose_name='Data Source')),
                ('measure_type', models.CharField(max_length=1500, verbose_name='Measure Type')),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True, verbose_name='Numeric Value')),
                ('start_period', models.PositiveIntegerField(blank=True, verbose_name='Start Period')),
                ('end_period', models.PositiveIntegerField(blank=True, verbose_name='End Period')),
                ('period', models.CharField(blank=True, max_length=25, verbose_name='Period')),
            ],
            options={
                'verbose_name': 'Facts',
                'verbose_name_plural': '   Facts',
                'db_table': 'dqa_vw_facts_dataframe',
                'ordering': ('indicator_name',),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Similarity_Index',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('source_indicator', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Data Indicator')),
                ('similar_indicator', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Similar Indicator')),
                ('score', models.PositiveIntegerField(verbose_name='Similarity Score %')),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'Similarity Score',
                'verbose_name_plural': 'Similarity Scores',
                'db_table': 'dqa_similar_indicators_score',
                'ordering': ('-score',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Mutiple_MeasureTypes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('indicator_name', models.CharField(blank=True, editable=False, max_length=2000, null=True, verbose_name='Indicator Name')),
                ('location', models.CharField(blank=True, editable=False, max_length=2000, null=True, verbose_name='Country')),
                ('categoryoption', models.CharField(blank=True, editable=False, max_length=2000, null=True, verbose_name='category Option')),
                ('datasource', models.CharField(blank=True, editable=False, max_length=2000, null=True, verbose_name='Data Source')),
                ('measure_type', models.CharField(blank=True, editable=False, max_length=2000, null=True, verbose_name='Measure Type')),
                ('value', models.DecimalField(blank=True, decimal_places=3, editable=False, max_digits=20, null=True, verbose_name='Value Received')),
                ('period', models.CharField(blank=True, editable=False, max_length=2000, null=True, verbose_name='Period')),
                ('counts', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Number of Measure Types')),
                ('remarks', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Remarks')),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'Multiple Multiple Type',
                'verbose_name_plural': 'Multiple Measures',
                'db_table': 'dqa_multiple_indicators_checker',
                'ordering': ('indicator_name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MeasureTypes_Validator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('afrocode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Indicator ID')),
                ('measuremethod_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Measure Type ID')),
                ('indicator', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='indicators.StgIndicator', verbose_name='Indicator Name')),
                ('measure_type', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.StgMeasuremethod', verbose_name='Measure Type')),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'Valid Measure Type',
                'verbose_name_plural': '  Measuretypes',
                'db_table': 'dqa_valid_measure_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MeasureType_Statistics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Country')),
                ('indicator_name', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Indicator Name')),
                ('count', models.PositiveIntegerField(verbose_name='Number of Measure Types')),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'Measure Types Summary',
                'verbose_name_plural': 'Measure Summaries',
                'db_table': 'dqa_multiple_indicators_statistics',
                'ordering': ('-count',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Facts_DataFilter',
            fields=[
                ('filter_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_period', models.PositiveIntegerField(default=2022, help_text='This marks the start of reporting period', validators=[django.core.validators.MinValueValidator(1900), data_quality.models.max_value_current_year], verbose_name='Starting period')),
                ('end_period', models.PositiveIntegerField(default=2022, help_text='This marks the end of reporting. The value must be current             year or greater than the start year', validators=[django.core.validators.MinValueValidator(1900), data_quality.models.max_value_current_year], verbose_name='Ending Period')),
                ('categoryoptions', models.ManyToManyField(blank=True, db_table='dqa_filter_category_members', to='home.StgCategoryoption', verbose_name='Category Options')),
                ('datasource', models.ManyToManyField(blank=True, db_table='dqa_filter_source_members', to='home.StgDatasource', verbose_name='Data Sources')),
                ('indicators', models.ManyToManyField(blank=True, db_table='dqa_filter_indicator_members', to='indicators.StgIndicator', verbose_name='Indicators')),
                ('locations', models.ManyToManyField(blank=True, db_table='dqa_filter_location_members', to='regions.StgLocation', verbose_name='Locations')),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'Filter',
                'verbose_name_plural': '  Filter Facts',
                'db_table': 'dqa_filter_facts_dataframe',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DqaValueTypesConsistencyRemarks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('indicator_name', models.CharField(blank=True, max_length=2000, null=True)),
                ('location', models.CharField(blank=True, max_length=2000, null=True)),
                ('categoryoption', models.CharField(blank=True, max_length=2000, null=True)),
                ('datasource', models.CharField(blank=True, max_length=2000, null=True)),
                ('measure_type', models.CharField(blank=True, max_length=2000, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True, verbose_name='Value')),
                ('period', models.CharField(blank=True, max_length=2000, null=True)),
                ('check_value', models.TextField(blank=True, max_length=2000, null=True)),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'Value Consistency',
                'verbose_name_plural': 'Value Consistencies',
                'db_table': 'dqa_valuetype_consistencies_remarks',
                'ordering': ('indicator_name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DqaInvalidPeriodRemarks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('indicator_name', models.CharField(blank=True, max_length=2000, null=True)),
                ('location', models.CharField(blank=True, max_length=2000, null=True)),
                ('categoryoption', models.CharField(blank=True, max_length=2000, null=True)),
                ('datasource', models.CharField(blank=True, max_length=2000, null=True)),
                ('measure_type', models.CharField(blank=True, max_length=2000, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True, verbose_name='Value')),
                ('period', models.CharField(blank=True, max_length=2000, null=True)),
                ('check_year', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'Check Period',
                'verbose_name_plural': ' Check Periods',
                'db_table': 'dqa_invalid_period_remarks',
                'ordering': ('indicator_name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DqaInvalidMeasuretypeRemarks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('indicator_name', models.CharField(blank=True, max_length=2000, null=True)),
                ('location', models.CharField(blank=True, max_length=2000, null=True)),
                ('categoryoption', models.CharField(blank=True, max_length=2000, null=True)),
                ('datasource', models.CharField(blank=True, max_length=2000, null=True)),
                ('measure_type', models.CharField(blank=True, max_length=2000, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True, verbose_name='Value')),
                ('period', models.CharField(blank=True, max_length=2000, null=True)),
                ('check_mesure_type', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'Check Measutype',
                'verbose_name_plural': ' Check Measures',
                'db_table': 'dqa_invalid_measuretype_remarks',
                'ordering': ('indicator_name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DqaInvalidDatasourceRemarks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('indicator_name', models.CharField(blank=True, max_length=2000, null=True)),
                ('location', models.CharField(blank=True, max_length=2000, null=True)),
                ('categoryoption', models.CharField(blank=True, max_length=2000, null=True)),
                ('datasource', models.CharField(blank=True, max_length=2000, null=True)),
                ('measure_type', models.CharField(blank=True, max_length=2000, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True, verbose_name='Value')),
                ('period', models.CharField(blank=True, max_length=2000, null=True)),
                ('check_data_source', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User(Email)')),
            ],
            options={
                'verbose_name': 'Invalid Source',
                'verbose_name_plural': ' Check Sources',
                'db_table': 'dqa_invalid_datasource_remarks',
                'ordering': ('indicator_name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DqaInvalidCategoryoptionRemarks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('indicator_name', models.CharField(blank=True, max_length=2000, null=True)),
                ('location', models.CharField(blank=True, max_length=2000, null=True)),
                ('categoryoption', models.CharField(blank=True, max_length=2000, null=True)),
                ('datasource', models.CharField(blank=True, max_length=2000, null=True)),
                ('measure_type', models.CharField(blank=True, max_length=2000, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True, verbose_name='Value')),
                ('period', models.CharField(blank=True, max_length=2000, null=True)),
                ('check_category_option', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'Check Categoryoption',
                'verbose_name_plural': ' Check Categories',
                'db_table': 'dqa_invalid_categoryoption_remarks',
                'ordering': ('indicator_name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DqaInternalConsistencyOutliersRemarks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('indicator_name', models.CharField(blank=True, max_length=2000, null=True)),
                ('location', models.CharField(blank=True, max_length=2000, null=True)),
                ('categoryoption', models.CharField(blank=True, max_length=2000, null=True)),
                ('datasource', models.CharField(blank=True, max_length=2000, null=True)),
                ('measure_type', models.CharField(blank=True, max_length=2000, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True, verbose_name='Value')),
                ('period', models.CharField(blank=True, max_length=2000, null=True)),
                ('internal_consistency', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'Internal Consistency',
                'verbose_name_plural': 'Internal Consistencies',
                'db_table': 'dqa_internal_consistencies_remarks',
                'ordering': ('indicator_name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DqaExternalConsistencyOutliersRemarks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('indicator_name', models.CharField(blank=True, max_length=2000, null=True)),
                ('location', models.CharField(blank=True, max_length=2000, null=True)),
                ('categoryoption', models.CharField(blank=True, max_length=2000, null=True)),
                ('datasource', models.CharField(blank=True, max_length=2000, null=True)),
                ('measure_type', models.CharField(blank=True, max_length=2000, null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=3, max_digits=20, null=True, verbose_name='Value')),
                ('period', models.CharField(blank=True, max_length=2000, null=True)),
                ('external_consistency', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'External Consistency',
                'verbose_name_plural': 'External Consistencies',
                'db_table': 'dqa_external_inconsistencies_remarks',
                'ordering': ('indicator_name',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DataSource_Validator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('afrocode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Indicator ID')),
                ('datasourceid', models.PositiveIntegerField(blank=True, null=True, verbose_name='Data SourceID')),
                ('datasource', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.StgDatasource', verbose_name='Data Source')),
                ('indicator', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='indicators.StgIndicator', verbose_name='Indicator Name')),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'Valid Source',
                'verbose_name_plural': '  Datasources',
                'db_table': 'dqa_valid_datasources',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CategoryOptions_Validator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('afrocode', models.CharField(blank=True, max_length=50, null=True, verbose_name='Indicator ID')),
                ('categoryoptionid', models.PositiveIntegerField(blank=True, null=True, verbose_name='Disaggregation ID')),
                ('categoryoption', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.StgCategoryoption', verbose_name='Disaggregation Options')),
                ('indicator', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='indicators.StgIndicator', verbose_name='Indicator Name')),
                ('user', models.ForeignKey(blank=True, default=14, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User Name (Email)')),
            ],
            options={
                'verbose_name': 'Valid Category Option',
                'verbose_name_plural': '  Categoryoptions',
                'db_table': 'dqa_valid_categoryoptions',
                'managed': True,
            },
        ),
    ]
